name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  verify_module:
    name: Verify module
    strategy:
      matrix:
        terraform: [1.1.9]
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:${{ matrix.terraform }}
    steps:
      - uses: actions/checkout@v3
      - run: terraform init -get -backend=false -input=false
      - run: terraform fmt -recursive -check=true -write=false

  verify_examples:
    name: Verify examples
    strategy:
      fail-fast: false
      matrix:
        terraform: [1.0.11, latest]
        example:
          [
            "runner-default",
            "runner-docker",
            "runner-multi-region",
            "runner-pre-registered",
            "runner-public",
          ]
    defaults:
      run:
        working-directory: examples/${{ matrix.example }}
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:${{ matrix.terraform }}
    steps:
      - uses: actions/checkout@v3
      - run: terraform init -get -backend=false -input=false
      - if: contains(matrix.terraform, '1.0.')
        run: terraform fmt -recursive -check=true -write=false
      - run: terraform validate

  docs:
    # update docs after merge back to main
    if: github.event_name == 'pull_request'
    name: Auto update terraform docs
    needs: [verify_module, verify_examples]
    runs-on: ubuntu-latest
    
    steps:
    - name: CHeckout branch
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Generate TF docs
      uses: terraform-docs/gh-actions@v1.0.0
      with:
        find-dir: .
        git-commit-message: "docs: auto update terraform docs"
        git-push: true

  tfsec:
    name: tfsec PR commenter
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ github.token }}
