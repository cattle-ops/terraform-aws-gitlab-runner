name: CI
on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  verify_module:
    name: Verify module
    strategy:
      matrix:
        terraform: [1.0.11]
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:${{ matrix.terraform }}
    steps:
      - uses: actions/checkout@v3
      - run: terraform init -get -backend=false -input=false
      - run: terraform fmt -recursive -check=true -write=false

  verify_examples:
    name: Verify examples
    strategy:
      fail-fast: false
      matrix:
        terraform: [0.15.0, 1.0.11, latest]
        example:
          [
            "runner-default",
            "runner-docker",
            "runner-multi-region",
            "runner-pre-registered",
            "runner-public",
          ]
    defaults:
      run:
        working-directory: examples/${{ matrix.example }}
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:${{ matrix.terraform }}
    steps:
      - uses: actions/checkout@v3
      - run: terraform init -get -backend=false -input=false
      - if: contains(matrix.terraform, '1.0.')
        run: terraform fmt -recursive -check=true -write=false
      - run: terraform validate

  docs:
    name: Auto update terraform docs
    needs: [verify_module, verify_examples]
    runs-on: ubuntu-latest
    steps:
    - name: CHeckout branch
      if: github.event_name != 'pull_request'
      uses: actions/checkout@v3

    - name: Checkout PR
      if: github.event_name == 'pull_request'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Generate TF docs
      uses: terraform-docs/gh-actions@v1.0.0
      with:
        # recursive: true
        find-dir: .
        git-commit-message: "docs: auto update terraform docs"
        git-push: true

    # - name: Generate TF docs examples
    #   uses: terraform-docs/gh-actions@v1.0.0
    #   with:
    #     find-dir: examples/
    #     git-commit-message: "docs: auto update terraform docs"
    #     git-push: true

  release:
    if: github.event_name != 'pull_request' && contains('refs/heads/main', github.ref)
    name: Release
    needs: [verify_module, verify_examples]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Get installation token
        uses: npalm/action-app-token@v1.0.0
        id: app-token
        with:
          appId: ${{ secrets.APP_ID }}
          appPrivateKeyBase64: ${{ secrets.APP_PRIVATE_KEY_BASE64 }}
          appInstallationType: repo
          appInstallationValue: ${{ github.repository }}

      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          cp .release/* .
          yarn 
          yarn release --repositoryUrl https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
